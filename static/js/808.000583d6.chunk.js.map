{"version":3,"file":"static/js/808.000583d6.chunk.js","mappings":"wLACaA,E,OAAcC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4E,SCcrCC,EAAAA,GAAAA,SACEC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,EACAC,EAAAA,IAEF,IA+EA,EA/Ec,SAAHC,GAAuB,IAAjBC,EAASD,EAATC,UAKTC,EAAgB,CACpBC,OALaF,EACZG,QACAC,UACAC,KAAI,SAACC,EAAMC,GAAK,OAAMD,EAAKE,IAAMF,EAAKE,IAAG,OAAAC,OAAUF,EAAQ,EAAG,IAG/DG,SAAU,CACR,CACEC,MAAO,QACPC,KAAMZ,EACHG,QACAC,UACAC,KAAI,SAAAC,GAAI,OAAIA,EAAKO,UAAU,IAC9BC,YAAa,oBACbC,gBAAiB,2BAEnB,CACEJ,MAAO,SACPC,KAAMZ,EACHG,QACAC,UACAC,KAAI,SAAAC,GAAI,OAAIA,EAAKU,WAAW,IAC/BF,YAAa,oBACbC,gBAAiB,6BAsCvB,OACEE,EAAAA,EAAAA,KAAC9B,EAAW,CAAA+B,UACVD,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACP,KAAMX,EAAemB,QAnCf,CACdC,QAAS,SACTC,QAAS,QACTC,QAAS,MACTC,YAAY,EAEZC,QAAS,CACPC,OAAQ,CACNC,SAAU,OAEZC,MAAO,CACLC,SAAS,EACTC,KAAM,QACNH,SAAU,QAGZI,OAAQ,CACNC,EAAG,CACDC,KAAM,SACNJ,SAAS,EACTC,KAAM,QACNH,SAAU,QAEZO,EAAG,CACDD,KAAM,SACNJ,SAAS,EACTC,KAAM,SACNH,SAAU,gBAWpB,C","sources":["components/Graph/Graph.styled.js","components/Graph/Graph.js"],"sourcesContent":["import styled from 'styled-components';\nexport const GrapWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 0 10px;\n`;\n","import PropTypes, { shape } from 'prop-types';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { GrapWrapper } from './Graph.styled';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\nconst Graph = ({ graphData }) => {\n  const labels = graphData\n    .slice()\n    .reverse()\n    .map((item, index) => (item.day ? item.day : `Day ${index - 1}`));\n  const graphDatasets = {\n    labels,\n    datasets: [\n      {\n        label: 'Cases',\n        data: graphData\n          .slice()\n          .reverse()\n          .map(item => item.totalCases),\n        borderColor: 'rgb(255, 99, 132)',\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      },\n      {\n        label: 'Deaths',\n        data: graphData\n          .slice()\n          .reverse()\n          .map(item => item.totalDeaths),\n        borderColor: 'rgb(53, 162, 235)',\n        backgroundColor: 'rgba(53, 162, 235, 0.5)',\n      },\n    ],\n  };\n\n  const options = {\n    xAxisID: 'Period',\n    yAxisID: 'Cases',\n    tension: '0.3',\n    responsive: true,\n\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Cases',\n        position: 'left',\n      },\n\n      scales: {\n        x: {\n          type: 'linear',\n          display: true,\n          text: 'Cases',\n          position: 'left',\n        },\n        y: {\n          type: 'linear',\n          display: true,\n          text: 'Period',\n          position: 'center',\n        },\n      },\n    },\n  };\n\n  return (\n    <GrapWrapper>\n      <Line data={graphDatasets} options={options} />\n    </GrapWrapper>\n  );\n};\n\nGraph.propTypes = {\n  graphData: PropTypes.arrayOf(\n    shape({\n      day: PropTypes.string.isRequired,\n      totalCases: PropTypes.number.isRequired,\n      totalDeaths: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Graph;\n"],"names":["GrapWrapper","styled","_templateObject","_taggedTemplateLiteral","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","_ref","graphData","graphDatasets","labels","slice","reverse","map","item","index","day","concat","datasets","label","data","totalCases","borderColor","backgroundColor","totalDeaths","_jsx","children","Line","options","xAxisID","yAxisID","tension","responsive","plugins","legend","position","title","display","text","scales","x","type","y"],"sourceRoot":""}